var documenterSearchIndex = {"docs":
[{"location":"man/reference.html#Types","page":"Reference","title":"Types","text":"","category":"section"},{"location":"man/reference.html","page":"Reference","title":"Reference","text":"Modules = [DataValet]\nPrivate = true\nOrder = [:type]","category":"page"},{"location":"man/reference.html#Functions","page":"Reference","title":"Functions","text":"","category":"section"},{"location":"man/reference.html","page":"Reference","title":"Reference","text":"Modules = [DataValet]\nPrivate = true\nOrder = [:function]","category":"page"},{"location":"man/reference.html#DataValet.clean_file_name-Tuple{Any}","page":"Reference","title":"DataValet.clean_file_name","text":"clean_file_name(name)\n\nConstruct a clean file name.\n\n\n\n\n\n","category":"method"},{"location":"man/reference.html#DataValet.file_extension-Tuple{Any}","page":"Reference","title":"DataValet.file_extension","text":"file_extension(filename)\n\nExtract extension from the string representing a file name.\n\nExpected result:\n\np = \"matrices.dir\"\nfile_extension(p) == \".dir\"\np = \"matrices.h5\"\nfile_extension(p) == \".h5\"\np = \"matri.ces.dir\"\nfile_extension(p) == \".dir\"\np = \"matrices.\"\nfile_extension(p) == \".\"\np = \"matrices\"\nfile_extension(p) == \"\"\n\n\n\n\n\n","category":"method"},{"location":"man/reference.html#DataValet.retrieve_json-Tuple{Any}","page":"Reference","title":"DataValet.retrieve_json","text":"retrieve_json(j)\n\nRetrieve a dictionary from a JSON file.\n\n\n\n\n\n","category":"method"},{"location":"man/reference.html#DataValet.retrieve_matrix-Tuple{Any, Any}","page":"Reference","title":"DataValet.retrieve_matrix","text":"retrieve_matrix(fname, mpath)\n\nRetrieve a matrix from file fname.\n\nThe matrix data is stored under the path mpath.\n\nExample: Storing a sparse matrix as \"/data\" with store_matrix(\"test/matrices/matrix_SInt64.h5f\", \"/data\", d) gives:\n\njulia> f = h5open(\"test/matrices/matrix_SInt64.h5f\", \"r\")      \n�\n└─ � data \n   ├─ � I \n   ├─ � J \n   ├─ � V \n   ├─ � matrix_type\n   ├─ � ncols      \n   └─ � nrows   \n\nExample: Storing a dense matrix under the default path (\"/\") with store_matrix(\"matrix_d_Float32.h5\", d) gives:\n\njulia> f = h5open(\"matrix_d_Float32.h5\", \"r\")            \n�  \n├─ � matrix      \n└─ � matrix_type    \n\n\n\n\n\n","category":"method"},{"location":"man/reference.html#DataValet.retrieve_matrix-Tuple{Any}","page":"Reference","title":"DataValet.retrieve_matrix","text":"retrieve_matrix(fname)\n\nRetrieve a matrix from file fname.\n\n\n\n\n\n","category":"method"},{"location":"man/reference.html#DataValet.store_json-Tuple{Any, Any}","page":"Reference","title":"DataValet.store_json","text":"store_json(j, d)\n\nStore a dictionary into a JSON file.\n\n\n\n\n\n","category":"method"},{"location":"man/reference.html#DataValet.store_matrix-Tuple{Any, Any, Any}","page":"Reference","title":"DataValet.store_matrix","text":"store_matrix(fname, mpath, matrix)\n\nStore a dense matrix under the path mpath into the file fname.\n\n\n\n\n\n","category":"method"},{"location":"man/reference.html#DataValet.store_matrix-Tuple{Any, Any}","page":"Reference","title":"DataValet.store_matrix","text":"store_matrix(fname, matrix)\n\nStore a dense matrix into the file fname.\n\n\n\n\n\n","category":"method"},{"location":"man/reference.html#DataValet.store_matrix-Union{Tuple{T}, Tuple{Any, Any, SparseArrays.SparseMatrixCSC{T, Int64}}} where T","page":"Reference","title":"DataValet.store_matrix","text":"store_matrix(fname, mpath, matrix::SparseArrays.SparseMatrixCSC{T, Int64}) where {T}\n\nStore a sparse matrix under the path mpath into the file fname.\n\n\n\n\n\n","category":"method"},{"location":"man/reference.html#DataValet.store_matrix-Union{Tuple{T}, Tuple{Any, SparseArrays.SparseMatrixCSC{T, Int64}}} where T","page":"Reference","title":"DataValet.store_matrix","text":"store_matrix(fname, matrix::SparseArrays.SparseMatrixCSC{T, Int64}) where {T}\n\nStore a sparse matrix into the file fname.\n\n\n\n\n\n","category":"method"},{"location":"man/reference.html#DataValet.with_extension-Tuple{Any, Any}","page":"Reference","title":"DataValet.with_extension","text":"with_extension(filename, ext)\n\nMake sure the file name has an extension.\n\next can be either with or without the leading dot.\n\na = with_extension(s, \".ext\") = \"something_or_other_1=0_5_5_7.ext\"\na = with_extension(s, \"ext\") = \"something_or_other_1=0_5_5_7.ext\"  \n\n\n\n\n\n","category":"method"},{"location":"index.html#FinEtoolsFlexStructures-Documentation","page":"Home","title":"FinEtoolsFlexStructures Documentation","text":"","category":"section"},{"location":"index.html#Manual","page":"Home","title":"Manual","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"The description of the types and the functions, organized by module and/or other logical principle.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"Pages = [\n    \"man/reference.md\",\n]\nDepth = 2","category":"page"}]
}
